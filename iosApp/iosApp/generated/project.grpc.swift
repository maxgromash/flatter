//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: project.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Usage: instantiate `Models_ProjectServiceClient`, then call methods of this protocol to make API calls.
internal protocol Models_ProjectServiceClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Models_ProjectServiceClientInterceptorFactoryProtocol? { get }

  func getProjects(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Models_GetProjectsResponse>

  func getFlats(
    _ request: Models_GetFlatsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Models_GetFlatsRequest, Models_GetFlatsResponse>

  func getNews(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Models_GetNewsResponse>

  func getFavourites(
    _ request: Models_GetFavouritesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Models_GetFavouritesRequest, Models_GetFavouritesResponse>

  func addFavourites(
    _ request: Models_AddFavouritesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Models_AddFavouritesRequest, Models_AddFavouritesResponse>

  func removeFavourites(
    _ request: Models_RemoveFavouritesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Models_RemoveFavouritesRequest, Models_RemoveFavouritesResponse>
}

extension Models_ProjectServiceClientProtocol {
  internal var serviceName: String {
    return "models.ProjectService"
  }

  /// Unary call to GetProjects
  ///
  /// - Parameters:
  ///   - request: Request to send to GetProjects.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getProjects(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Models_GetProjectsResponse> {
    return self.makeUnaryCall(
      path: Models_ProjectServiceClientMetadata.Methods.getProjects.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetProjectsInterceptors() ?? []
    )
  }

  /// Unary call to GetFlats
  ///
  /// - Parameters:
  ///   - request: Request to send to GetFlats.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getFlats(
    _ request: Models_GetFlatsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Models_GetFlatsRequest, Models_GetFlatsResponse> {
    return self.makeUnaryCall(
      path: Models_ProjectServiceClientMetadata.Methods.getFlats.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetFlatsInterceptors() ?? []
    )
  }

  /// Unary call to GetNews
  ///
  /// - Parameters:
  ///   - request: Request to send to GetNews.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getNews(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Models_GetNewsResponse> {
    return self.makeUnaryCall(
      path: Models_ProjectServiceClientMetadata.Methods.getNews.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetNewsInterceptors() ?? []
    )
  }

  /// Unary call to GetFavourites
  ///
  /// - Parameters:
  ///   - request: Request to send to GetFavourites.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getFavourites(
    _ request: Models_GetFavouritesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Models_GetFavouritesRequest, Models_GetFavouritesResponse> {
    return self.makeUnaryCall(
      path: Models_ProjectServiceClientMetadata.Methods.getFavourites.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetFavouritesInterceptors() ?? []
    )
  }

  /// Unary call to AddFavourites
  ///
  /// - Parameters:
  ///   - request: Request to send to AddFavourites.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func addFavourites(
    _ request: Models_AddFavouritesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Models_AddFavouritesRequest, Models_AddFavouritesResponse> {
    return self.makeUnaryCall(
      path: Models_ProjectServiceClientMetadata.Methods.addFavourites.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddFavouritesInterceptors() ?? []
    )
  }

  /// Unary call to RemoveFavourites
  ///
  /// - Parameters:
  ///   - request: Request to send to RemoveFavourites.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func removeFavourites(
    _ request: Models_RemoveFavouritesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Models_RemoveFavouritesRequest, Models_RemoveFavouritesResponse> {
    return self.makeUnaryCall(
      path: Models_ProjectServiceClientMetadata.Methods.removeFavourites.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRemoveFavouritesInterceptors() ?? []
    )
  }
}

#if compiler(>=5.6)
@available(*, deprecated)
extension Models_ProjectServiceClient: @unchecked Sendable {}
#endif // compiler(>=5.6)

@available(*, deprecated, renamed: "Models_ProjectServiceNIOClient")
internal final class Models_ProjectServiceClient: Models_ProjectServiceClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Models_ProjectServiceClientInterceptorFactoryProtocol?
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  internal var interceptors: Models_ProjectServiceClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the models.ProjectService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Models_ProjectServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

internal struct Models_ProjectServiceNIOClient: Models_ProjectServiceClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Models_ProjectServiceClientInterceptorFactoryProtocol?

  /// Creates a client for the models.ProjectService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Models_ProjectServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

#if compiler(>=5.6)
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Models_ProjectServiceAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Models_ProjectServiceClientInterceptorFactoryProtocol? { get }

  func makeGetProjectsCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Models_GetProjectsResponse>

  func makeGetFlatsCall(
    _ request: Models_GetFlatsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Models_GetFlatsRequest, Models_GetFlatsResponse>

  func makeGetNewsCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Models_GetNewsResponse>

  func makeGetFavouritesCall(
    _ request: Models_GetFavouritesRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Models_GetFavouritesRequest, Models_GetFavouritesResponse>

  func makeAddFavouritesCall(
    _ request: Models_AddFavouritesRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Models_AddFavouritesRequest, Models_AddFavouritesResponse>

  func makeRemoveFavouritesCall(
    _ request: Models_RemoveFavouritesRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Models_RemoveFavouritesRequest, Models_RemoveFavouritesResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Models_ProjectServiceAsyncClientProtocol {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Models_ProjectServiceClientMetadata.serviceDescriptor
  }

  internal var interceptors: Models_ProjectServiceClientInterceptorFactoryProtocol? {
    return nil
  }

  internal func makeGetProjectsCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Models_GetProjectsResponse> {
    return self.makeAsyncUnaryCall(
      path: Models_ProjectServiceClientMetadata.Methods.getProjects.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetProjectsInterceptors() ?? []
    )
  }

  internal func makeGetFlatsCall(
    _ request: Models_GetFlatsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Models_GetFlatsRequest, Models_GetFlatsResponse> {
    return self.makeAsyncUnaryCall(
      path: Models_ProjectServiceClientMetadata.Methods.getFlats.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetFlatsInterceptors() ?? []
    )
  }

  internal func makeGetNewsCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Models_GetNewsResponse> {
    return self.makeAsyncUnaryCall(
      path: Models_ProjectServiceClientMetadata.Methods.getNews.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetNewsInterceptors() ?? []
    )
  }

  internal func makeGetFavouritesCall(
    _ request: Models_GetFavouritesRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Models_GetFavouritesRequest, Models_GetFavouritesResponse> {
    return self.makeAsyncUnaryCall(
      path: Models_ProjectServiceClientMetadata.Methods.getFavourites.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetFavouritesInterceptors() ?? []
    )
  }

  internal func makeAddFavouritesCall(
    _ request: Models_AddFavouritesRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Models_AddFavouritesRequest, Models_AddFavouritesResponse> {
    return self.makeAsyncUnaryCall(
      path: Models_ProjectServiceClientMetadata.Methods.addFavourites.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddFavouritesInterceptors() ?? []
    )
  }

  internal func makeRemoveFavouritesCall(
    _ request: Models_RemoveFavouritesRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Models_RemoveFavouritesRequest, Models_RemoveFavouritesResponse> {
    return self.makeAsyncUnaryCall(
      path: Models_ProjectServiceClientMetadata.Methods.removeFavourites.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRemoveFavouritesInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Models_ProjectServiceAsyncClientProtocol {
  internal func getProjects(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) async throws -> Models_GetProjectsResponse {
    return try await self.performAsyncUnaryCall(
      path: Models_ProjectServiceClientMetadata.Methods.getProjects.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetProjectsInterceptors() ?? []
    )
  }

  internal func getFlats(
    _ request: Models_GetFlatsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Models_GetFlatsResponse {
    return try await self.performAsyncUnaryCall(
      path: Models_ProjectServiceClientMetadata.Methods.getFlats.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetFlatsInterceptors() ?? []
    )
  }

  internal func getNews(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) async throws -> Models_GetNewsResponse {
    return try await self.performAsyncUnaryCall(
      path: Models_ProjectServiceClientMetadata.Methods.getNews.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetNewsInterceptors() ?? []
    )
  }

  internal func getFavourites(
    _ request: Models_GetFavouritesRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Models_GetFavouritesResponse {
    return try await self.performAsyncUnaryCall(
      path: Models_ProjectServiceClientMetadata.Methods.getFavourites.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetFavouritesInterceptors() ?? []
    )
  }

  internal func addFavourites(
    _ request: Models_AddFavouritesRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Models_AddFavouritesResponse {
    return try await self.performAsyncUnaryCall(
      path: Models_ProjectServiceClientMetadata.Methods.addFavourites.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddFavouritesInterceptors() ?? []
    )
  }

  internal func removeFavourites(
    _ request: Models_RemoveFavouritesRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Models_RemoveFavouritesResponse {
    return try await self.performAsyncUnaryCall(
      path: Models_ProjectServiceClientMetadata.Methods.removeFavourites.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRemoveFavouritesInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal struct Models_ProjectServiceAsyncClient: Models_ProjectServiceAsyncClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Models_ProjectServiceClientInterceptorFactoryProtocol?

  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Models_ProjectServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

#endif // compiler(>=5.6)

internal protocol Models_ProjectServiceClientInterceptorFactoryProtocol: GRPCSendable {

  /// - Returns: Interceptors to use when invoking 'getProjects'.
  func makeGetProjectsInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Models_GetProjectsResponse>]

  /// - Returns: Interceptors to use when invoking 'getFlats'.
  func makeGetFlatsInterceptors() -> [ClientInterceptor<Models_GetFlatsRequest, Models_GetFlatsResponse>]

  /// - Returns: Interceptors to use when invoking 'getNews'.
  func makeGetNewsInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Models_GetNewsResponse>]

  /// - Returns: Interceptors to use when invoking 'getFavourites'.
  func makeGetFavouritesInterceptors() -> [ClientInterceptor<Models_GetFavouritesRequest, Models_GetFavouritesResponse>]

  /// - Returns: Interceptors to use when invoking 'addFavourites'.
  func makeAddFavouritesInterceptors() -> [ClientInterceptor<Models_AddFavouritesRequest, Models_AddFavouritesResponse>]

  /// - Returns: Interceptors to use when invoking 'removeFavourites'.
  func makeRemoveFavouritesInterceptors() -> [ClientInterceptor<Models_RemoveFavouritesRequest, Models_RemoveFavouritesResponse>]
}

internal enum Models_ProjectServiceClientMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "ProjectService",
    fullName: "models.ProjectService",
    methods: [
      Models_ProjectServiceClientMetadata.Methods.getProjects,
      Models_ProjectServiceClientMetadata.Methods.getFlats,
      Models_ProjectServiceClientMetadata.Methods.getNews,
      Models_ProjectServiceClientMetadata.Methods.getFavourites,
      Models_ProjectServiceClientMetadata.Methods.addFavourites,
      Models_ProjectServiceClientMetadata.Methods.removeFavourites,
    ]
  )

  internal enum Methods {
    internal static let getProjects = GRPCMethodDescriptor(
      name: "GetProjects",
      path: "/models.ProjectService/GetProjects",
      type: GRPCCallType.unary
    )

    internal static let getFlats = GRPCMethodDescriptor(
      name: "GetFlats",
      path: "/models.ProjectService/GetFlats",
      type: GRPCCallType.unary
    )

    internal static let getNews = GRPCMethodDescriptor(
      name: "GetNews",
      path: "/models.ProjectService/GetNews",
      type: GRPCCallType.unary
    )

    internal static let getFavourites = GRPCMethodDescriptor(
      name: "GetFavourites",
      path: "/models.ProjectService/GetFavourites",
      type: GRPCCallType.unary
    )

    internal static let addFavourites = GRPCMethodDescriptor(
      name: "AddFavourites",
      path: "/models.ProjectService/AddFavourites",
      type: GRPCCallType.unary
    )

    internal static let removeFavourites = GRPCMethodDescriptor(
      name: "RemoveFavourites",
      path: "/models.ProjectService/RemoveFavourites",
      type: GRPCCallType.unary
    )
  }
}

